version: '3.8'

networks:
  dev:

services:

  web:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: >
      bash -c "python manage.py collectstatic --noinput &&
               python manage.py makemigrations &&
               python manage.py migrate &&
               gunicorn -b 0.0.0.0:8000 mysite.wsgi:application"
    volumes:
      - .:/code
      - //c/Users/Geri/Desktop/cyber01/backend/staticfiles:/code/static
      - media_volume:/code/media
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000" ]
      interval: 30s
      timeout: 10s
      retries: 5
    ports:
      - "8000:8000"
    depends_on:
      - db
    networks:
      - dev

  db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - dev

  frontend:
    build:
      context: ./FrontEnd
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - nginx
    networks:
      - dev

  nginx:
    image: nginx:stable-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - //c/Users/Geri/Desktop/cyber01/backend/staticfiles:/code/static
      - media_volume:/code/media
    depends_on:
      web:
        condition: service_healthy
    networks:
      - dev

volumes:
  postgres_data:
  media_volume: